{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jetlir\\\\Desktop\\\\starter-files\\\\src\\\\pages\\\\PastLaunches\\\\PastLaunches.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport Error from './../../components/Error';\nimport Loader from './../../components/Loader';\nimport LaunchesFeed from './../../components/LaunchesFeed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_LAUNCHES_QUERY = gql`\n    {\n            launchesPast(limit: 15) {\n                mission_name\n                launch_site {\n                    site_name_long\n                }\n                links {\n                article_link\n                flickr_images\n                }\n                id\n            }\n    }\n\n`;\n\nconst PastLaunches = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_LAUNCHES_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Error, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 20\n  }, this);\n  const launches = data.launchesPast.filter(launch => launch.links.article_link && launch.links.flickr_images.length > 0);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4 text-center my-5 pt-5\",\n      children: \"Past Launches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(LaunchesFeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PastLaunches, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = PastLaunches;\nexport default PastLaunches;\n\nvar _c;\n\n$RefreshReg$(_c, \"PastLaunches\");","map":{"version":3,"sources":["C:/Users/Jetlir/Desktop/starter-files/src/pages/PastLaunches/PastLaunches.js"],"names":["React","Fragment","gql","useQuery","Error","Loader","LaunchesFeed","GET_LAUNCHES_QUERY","PastLaunches","data","loading","error","launches","launchesPast","filter","launch","links","article_link","flickr_images","length"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA,MAAMC,kBAAkB,GAAGL,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,MAAMM,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACI,kBAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAGC,KAAH,EAAU,oBAAM,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,UAAN;AAEZ,QAAMC,QAAQ,GAAGH,IAAI,CAACI,YAAL,CAAkBC,MAAlB,CACdC,MAAM,IAAGA,MAAM,CAACC,KAAP,CAAaC,YAAb,IAA6BF,MAAM,CAACC,KAAP,CAAaE,aAAb,CAA2BC,MAA3B,GAAoC,CAD5D,CAAjB;AAKG,sBACI,QAAC,QAAD;AAAA,4BAEE;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnBD;;GAAMX,Y;UAE+BL,Q;;;KAF/BK,Y;AAqBN,eAAeA,YAAf","sourcesContent":["\nimport React, { Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\nimport Error from './../../components/Error';\nimport Loader from './../../components/Loader';\nimport LaunchesFeed from './../../components/LaunchesFeed'\n\nconst GET_LAUNCHES_QUERY = gql`\n    {\n            launchesPast(limit: 15) {\n                mission_name\n                launch_site {\n                    site_name_long\n                }\n                links {\n                article_link\n                flickr_images\n                }\n                id\n            }\n    }\n\n`;\n\nconst PastLaunches = () => {\n\n    const { data, loading, error } = useQuery(GET_LAUNCHES_QUERY);\n\n    if (loading) return <Loader />;\n   if(error) return<Error error={error} />;\n\n const launches = data.launchesPast.filter(\n    launch =>launch.links.article_link && launch.links.flickr_images.length > 0\n    );\n\n\n    return (\n        <Fragment>\n           \n          <h1 className=\"display-4 text-center my-5 pt-5\">Past Launches</h1>\n          <LaunchesFeed  />\n        </Fragment>\n    );\n};\n\nexport default PastLaunches;\n"]},"metadata":{},"sourceType":"module"}